// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model TipoDeUsuario {
  IdTipoUsuario Int @id @default(autoincrement())
  usuario Usuario?
  rol String
}

model Notificacion {
  id Int @id @default(autoincrement())
  usuarioId Int
  mensaje String
  leida Boolean

  usuario Usuario @relation(fields: [usuarioId], references: [id])
}


model Usuario {
  id Int @id @default(autoincrement())
  idTipoUsuario Int @unique
  correo String @unique
  contrasena String
  matricula Int @unique
  nombres String
  apellidos String
  carrera String
  facultad String
  notificaciones Notificacion[]
  solicitudes Solicitud[]
  asistencia Asistencia[]

  tipoUsuario TipoDeUsuario @relation(fields: [idTipoUsuario], references: [IdTipoUsuario])
}

model Solicitud {
  id Int @id @default(autoincrement())
  ubicacionId Int @unique
  responsableId Int 
  nombreResponsable String
  evento Evento?
  nombre String
  descripcion String
  fecha String
  valorEnCreditos Boolean
  horaInicio String
  horaFin String
  totalSellos Int
  modalidad String
  estado String
  capacidad Int
  fechaCreacion DateTime @default(now())
  notas String?
  mensaje String?
  recordatorio Int @default(0)

  responsable Usuario @relation(fields: [responsableId], references: [id])
  ubicacion Ubicacion? @relation(fields: [ubicacionId], references: [id])
}

model Ubicacion {
  id Int @id @default(autoincrement())
  solicitud Solicitud?
  facultad String
  estado String
  campus String
  ciudad String
  direccion String
  aula String
}

model Evento {
  id Int @id @default(autoincrement())
  solicitudId Int @unique
  estado String
  
  solicitud Solicitud @relation(fields: [solicitudId],references: [id])
  asistencia Asistencia[]
}

model Asistencia {
  id              Int           @id @default(autoincrement())
  usuario         Usuario       @relation(fields: [usuarioId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuarioId       Int
  eventoId        Int
  evento          Evento        @relation(fields: [eventoId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  fechaRegistro   DateTime      @default(now())

  @@unique([usuarioId, eventoId])
}



